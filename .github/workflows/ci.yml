name: CI

on:
  schedule:
    - cron: '0 16 */2 * *'
  workflow_dispatch:

jobs:
  check-updates:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'ilhamepri' && github.repository == 'ilhamepri/Begonia-Kernel-Builder'

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Fetch latest commits from all repos
        id: fetch_latest_commits
        run: |
          declare -A repos=(
            ["KernelSU"]="rsuntk/KernelSU@main"
            ["KernelSU-Next"]="KernelSU-Next/KernelSU-Next@next"
            ["SukiSU-Ultra"]="SukiSU-Ultra/SukiSU-Ultra@main"
          )
          
          touch new_build.md
          
          for key in "${!repos[@]}"; do
            IFS='@' read -r repo branch <<< "${repos[$key]}"
            
            response=$(curl -s "https://api.github.com/repos/${repo}/commits/${branch}")
            latest_commit=$(echo "$response" | jq -r '.sha')
            latest_date=$(echo "$response" | jq -r '.commit.author.date')
          
            echo "${key}_commit=$latest_commit" >> $GITHUB_ENV
            echo "${key}_date=$latest_date" >> $GITHUB_ENV
          
            echo "$key Commit ID: $latest_commit" >> new_build.md
            echo "$key Commit Date: $latest_date" >> new_build.md
            echo "" >> new_build.md
          done

      - name: Check if update branch exists
        id: check_branch
        run: |
          git fetch
          if git branch -r | grep -q "origin/update"; then
            echo "Update branch exists"
            echo "branch_exists=true" >> $GITHUB_ENV
          else
            echo "Update branch does not exist"
            echo "branch_exists=false" >> $GITHUB_ENV
          fi

      - name: Create update branch if it does not exist
        if: env.branch_exists == 'false'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout --orphan update
          git rm -rf .
          git commit --allow-empty -m "Initial commit for update branch"
          git push origin update

      - name: Checkout update branch
        run: |
          git checkout update
          git pull origin update

      - name: Compare commits and decide
        id: compare_commits
        run: |
          update_needed="false"
          if [ ! -f build.md ]; then
            update_needed="true"
          else
            diff -q build.md new_build.md > /dev/null || update_needed="true"
          fi

          echo "update=$update_needed" >> $GITHUB_ENV

      - name: Update build.md and trigger build
        if: env.update == 'true' || env.branch_exists == 'false'
        run: |
          git rm -rf --ignore-unmatch .
          mv new_build.md build.md
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add build.md
          git commit -m "Update build.md with latest commit info"
          git push origin update

      - name: Clear older runs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run list -L400 --json databaseId -q '.[].databaseId' | tail -n+5 | xargs -IID gh api "repos/$GITHUB_REPOSITORY/actions/runs/ID" -X DELETE || :

    outputs:
      update: ${{ env.update }}
      branch_exists: ${{ env.branch_exists }}

  build:
    permissions: write-all
    needs: check-updates
    uses: ./.github/workflows/build-release.yml
    if: ${{ needs.check-updates.outputs.update == 'true' || needs.check-updates.outputs.branch_exists == 'false' }}
    secrets: inherit

  trigger-telegram-report:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Telegram Report
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/cvnertnc/Begonia-Kernel-Builder/dispatches \
            -d '{"event_type": "trigger-telegram-report"}'
